#!/bin/bash
set -e

# Post-installation script for rcForge

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RESET='\033[0m'

# Function to create user's rcForge configuration structure
create_user_config() {
    local user_home="$1"
    local user="$2"
    local rcforge_dir="$user_home/.config/rcforge"

    # Skip if already a rcForge user
    if [[ -d "$rcforge_dir" ]]; then
        return 0
    }

    # Create base directories
    mkdir -p "$rcforge_dir/scripts"
    mkdir -p "$rcforge_dir/include"
    mkdir -p "$rcforge_dir/exports"
    mkdir -p "$rcforge_dir/docs"

    # Set restrictive permissions
    chmod 700 "$rcforge_dir"
    chmod 700 "$rcforge_dir/scripts"
    chmod 700 "$rcforge_dir/include"
    chmod 700 "$rcforge_dir/exports"
    chmod 700 "$rcforge_dir/docs"

    # Set ownership
    chown -R "$user:$user" "$rcforge_dir"

    # Copy minimal README
    cp /usr/share/doc/rcforge/README.md "$rcforge_dir/docs/" 2>/dev/null || true
    chown "$user:$user" "$rcforge_dir/docs/README.md" 2>/dev/null || true
}

# Main post-installation logic
if [[ "$1" = "configure" ]]; then
    echo -e "${GREEN}Setting up rcForge configuration for users...${RESET}"

    # Iterate through potential user home directories
    for user_home in /home/*; do
        # Skip if not a directory
        [[ -d "$user_home" ]] || continue

        user=$(basename "$user_home")

        # Skip system users (typically UID < 1000)
        [[ $(id -u "$user" 2>/dev/null) -ge 1000 ]] || continue

        create_user_config "$user_home" "$user"
    done

    echo -e "${GREEN}rcForge setup complete.${RESET}"
    echo ""
    echo -e "${YELLOW}To finish setup, run:${RESET}"
    echo "  rcforge-setup"
    echo ""
    echo -e "${YELLOW}For more information, see:${RESET}"
    echo "  /usr/share/doc/rcforge/README.md"
fi

exit 0
# EOF