#!/bin/bash
# postinst - Post-installation script for rcForge Debian package
# Author: Mark Hasse
# Date: 2025-04-05
# Version: 0.2.1

set -e  # Exit on error

# Use the system's default locale settings
LC_ALL=""
LANG=""

# Process arguments
case "$1" in
  configure)
    echo "Configuring rcForge user environment..."

    # Ensure the skeleton directory exists and has correct permissions
    if [ -d "/usr/share/rcforge/skel" ]; then
      chmod 755 /usr/share/rcforge/skel
      find /usr/share/rcforge/skel -type d -exec chmod 755 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting directory permissions in /usr/share/rcforge/skel" >>/var/log/rcforge-install.log
      find /usr/share/rcforge/skel -type f -name "*.sh" -exec chmod 644 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting script permissions in /usr/share/rcforge/skel" >>/var/log/rcforge-install.log
      find /usr/share/rcforge/skel -type f -name "*.md" -exec chmod 644 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting markdown file permissions in /usr/share/rcforge/skel" >>/var/log/rcforge-install.log
    else
      echo "Warning: Skeleton directory not found at /usr/share/rcforge/skel"
    fi

    # Set up user configuration for each normal user
    for user_home in /home/*; do
      # Skip if not a directory
      [ ! -d "$user_home" ] && continue

      user=$(basename "$user_home")

      # Skip system users
      if [ $(id -u "$user" 2>/dev/null || echo 0) -ge 1000 ]; then
        USER_DIR="$user_home/.config/rcforge"

        # Create user directories with proper permissions
        if [ ! -d "$USER_DIR" ]; then
          echo "Creating configuration directory for user: $user"

          # Copy the skeleton directory structure
          mkdir -p "$USER_DIR"
          cp -R /usr/share/rcforge/skel/* "$USER_DIR/" 2>>/var/log/rcforge-install.log || echo "Error copying skel to $USER_DIR" >>/var/log/rcforge-install.log

          # Set appropriate ownership and permissions
          chown -R "$user:$user" "$USER_DIR"
          chmod 755 "$USER_DIR"
          find "$USER_DIR" -type d -exec chmod 755 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting directory permissions in $USER_DIR" >>/var/log/rcforge-install.log
          find "$USER_DIR" -type f -exec chmod 600 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting file permissions in $USER_DIR" >>/var/log/rcforge-install.log
          find "$USER_DIR" -type f -name "*.sh" -exec chmod 700 {} \; 2>>/var/log/rcforge-install.log || echo "Error setting script permissions in $USER_DIR" >>/var/log/rcforge-install.log

          # Create a README in the scripts directory if it doesn't exist
          if [ ! -f "$USER_DIR/scripts/README.md" ]; then
            printf "# rcForge Shell Configuration Scripts\n\nThis directory contains your rcForge shell configuration scripts. Files follow\nthe naming convention:\n\n\`\`\`\n###_[hostname|global]_[environment]_[description].sh\n\`\`\`\n\nExample: \`100_global_common_environment.sh\` will set environment variables for\nall hosts and all shells.\n\nRefer to the documentation in the docs directory for more information.\n" > "$USER_DIR/scripts/README.md"
            chown "$user:$user" "$USER_DIR/scripts/README.md"
            chmod 600 "$USER_DIR/scripts/README.md"
          fi
        fi
      fi
    done

    echo "rcForge installation complete."
    echo ""
    echo "To activate rcForge in your shell:"
    echo "  echo 'source \"/usr/share/rcforge/rcforge.sh\"' >> ~/.bashrc"
    echo "  # or for Zsh"
    echo "  echo 'source \"/usr/share/rcforge/rcforge.sh\"' >> ~/.zshrc"
    echo ""
    echo "Then restart your shell or run: source ~/.bashrc (or ~/.zshrc)"
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    # Nothing to do here
    ;;

  *)
    echo "postinst called with unknown argument \`$1\'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

exit 0
